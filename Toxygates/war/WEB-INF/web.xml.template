<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
              http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         version="2.5"
         xmlns="http://java.sun.com/xml/ns/javaee">

    <!-- URL of the query and update endpoints of the RDF triplestore. -->
	<context-param>
		<param-name>repositoryURL</param-name>
		<param-value>http://localhost:3030/Panomicon/query</param-value>
	</context-param>

	<context-param>
		<param-name>updateURL</param-name>
		<param-value>http://localhost:3030/Panomicon/update</param-value>
	</context-param>

	<!-- Username and password for update access to the RDF triplestore. -->
	<context-param>
		<param-name>repositoryUser</param-name>
		<param-value>user</param-value>
	</context-param>
	<context-param>
		<param-name>repositoryPassword</param-name>
		<param-value>secret</param-value>
	</context-param>

	<!-- ID string of the instance. Mainly used for access control and data visibility.
	If you will not be using the new_instance*sh scripts, edit this string manually, and
	also enable the closing tag at the end of this file.
	To enable data access in the instance, create an instance
	with this ID string from the admin GUI to insert a corresponding record in the triplestore.
	-->
	<context-param>		
		<param-name>instanceName</param-name>
		<!-- The concrete parameter value will be filled in by
		scripts like new_instance.public.sh -->
		<param-value>##instanceName##</param-value>		
	</context-param>

    <context-param>
		<param-name>applicationName</param-name>
		<param-value>Panomicon</param-value>
	</context-param>

    <!-- Directory where Kyoto Cabinet databases are kept. -->
	<context-param>
		<param-name>dataDir</param-name>
		<param-value>kcchunk:/path/to/panomicon-data</param-value>
	</context-param>

	<!-- Kyoto cabinet database tuning parameters, see
	    https://fallabs.com/kyotocabinet/spex.html for details.
	    We use mainly the file hash (.kch) and file tree (.kct) databases.

	    Of the various databases we use, the matrix database files tend to be the largest ones,
	    and here we configure the amount of memory available to mmap the files for better performance (msiz option).
	-->
	<context-param>
		<param-name>matrixDbOptions</param-name>
		<param-value>#msiz=4294967296</param-value>
	</context-param>

	<!--  Location of downloadable CSV files generated by Panomicon -->
 	<context-param>
		<param-name>csvDir</param-name>
		<param-value>/var/lib/tomcat/webapps/panomicon/csv/</param-value>
	</context-param>

	<!-- User-accessible URL prefix for downloadable CSV files -->
	<context-param>
		<param-name>csvUrlBase</param-name>
		<param-value>https://toxygates.nibiohn.go.jp/panomicon/csv</param-value>
	</context-param>

	<!-- Email addresses for the feedback function on the Help menu. -->
	<context-param>
		<param-name>feedbackReceivers</param-name>
		<param-value>jtnystrom@gmail.com,kenji@nibiohn.go.jp,y-igarashi@nibiohn.go.jp</param-value>
	</context-param>
	<context-param>
		<param-name>feedbackFromAddress</param-name>
		<param-value>root@nibiohn.go.jp</param-value>
	</context-param>

	<!-- Maximum size of data uploads. -->
	<context-param>
		<!-- 256 MB -->
		<param-name>maxSize</param-name>
		<param-value>268435456</param-value>
	</context-param>

	<!-- Maximum size of data uploads. -->
	<context-param>
		<!-- 256 MB -->
		<param-name>maxFileSize</param-name>
		<param-value>268435456</param-value>
	</context-param>

	
  <!-- GWT servlets -->
  
	<servlet>
		<servlet-name>uploadServlet</servlet-name>
		<!-- This is the default servlet, it puts files in session -->
		<servlet-class>gwtupload.server.UploadServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>uploadServlet</servlet-name>
		<url-pattern>*.gupld</url-pattern>
	</servlet-mapping>	
	
	<servlet>
		<servlet-name>sampleServlet</servlet-name>
		<servlet-class>t.viewer.server.rpc.SampleServiceImpl</servlet-class>
	</servlet>

    <servlet>
        <servlet-name>probeServlet</servlet-name>
        <servlet-class>t.viewer.server.rpc.ProbeServiceImpl</servlet-class>
        <!-- give ProbeServlet a chance to preload platforms -->
        <load-on-startup>0</load-on-startup>
    </servlet>

	<servlet>
		<servlet-name>seriesServlet</servlet-name>
		<servlet-class>t.viewer.server.rpc.SeriesServiceImpl</servlet-class>
	</servlet>

	<servlet>
		<servlet-name>matrixServlet</servlet-name>
		<servlet-class>t.viewer.server.rpc.MatrixServiceImpl</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>probeServlet</servlet-name>
		<url-pattern>/toxygates/probe</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>sampleServlet</servlet-name>
		<url-pattern>/toxygates/sample</url-pattern>
	</servlet-mapping>
	
	<servlet-mapping>
		<servlet-name>seriesServlet</servlet-name>
		<url-pattern>/toxygates/series</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>matrixServlet</servlet-name>
    	<url-pattern>/toxygates/matrix</url-pattern>
  	</servlet-mapping>
  	
  	<servlet>
		<servlet-name>userDataServlet</servlet-name>
		<servlet-class>t.viewer.server.rpc.UserDataServiceImpl</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>userDataServlet</servlet-name>
		<url-pattern>/toxygates/userData</url-pattern>
	</servlet-mapping>

 	<servlet>
		<servlet-name>networkServlet</servlet-name>
		<servlet-class>t.viewer.server.rpc.NetworkServiceImpl</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>networkServlet</servlet-name>
		<url-pattern>/toxygates/network</url-pattern>
	</servlet-mapping>

  	<servlet>
		<servlet-name>intermineServlet</servlet-name>
		<servlet-class>t.viewer.server.intermine.IntermineServiceImpl</servlet-class>
	</servlet>
    <servlet-mapping>
		<servlet-name>intermineServlet</servlet-name>
    	<url-pattern>/toxygates/intermine</url-pattern>
  	</servlet-mapping>
  	
  	<servlet>
    	<servlet-name>remoteLogging</servlet-name>
    	<servlet-class>com.google.gwt.logging.server.RemoteLoggingServiceImpl</servlet-class>
	</servlet>	
	<servlet-mapping>
    	<servlet-name>remoteLogging</servlet-name>
    	<url-pattern>/toxygates/remote_logging</url-pattern>
	</servlet-mapping>
	<!-- End GWT servlets -->


    <!-- Non-GWT servlets -->
	<servlet>
		<servlet-name>geneSetServlet</servlet-name>
		<servlet-class>t.viewer.server.servlet.GeneSetServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>geneSetServlet</servlet-name>
		<url-pattern>/geneSet/*</url-pattern>
	</servlet-mapping>

	<servlet>
    	<servlet-name>jsonServlet</servlet-name>
    	<servlet-class>t.viewer.server.servlet.JSONServlet</servlet-class>
    </servlet>
    <servlet-mapping>
   		<servlet-name>jsonServlet</servlet-name>
   		<url-pattern>/toxygates/json/*</url-pattern>
   	</servlet-mapping>
   	<!-- End non-GWT servlets -->


  	<!-- Identifies available intermine instances by ID strings. Each one has its own configuration parameters below. -->
  	<context-param>
		<param-name>intermine.instances</param-name>
		<param-value>target,rat,human,mouse</param-value>
	</context-param>
	
	<context-param>
		<param-name>intermine.target.appname</param-name>
		<param-value>targetmine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.target.title</param-name>
		<param-value>TargetMine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.target.userurl</param-name>
		<param-value>https://targetmine.mizuguchilab.org</param-value>
	</context-param>
	
	<context-param>
		<param-name>intermine.human.appname</param-name>
		<param-value>humanmine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.human.title</param-name>
		<param-value>HumanMine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.human.userurl</param-name>
		<param-value>http://www.humanmine.org</param-value>
	</context-param>
	
	<context-param>
		<param-name>intermine.rat.appname</param-name>
		<param-value>ratmine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.rat.title</param-name>
		<param-value>RatMine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.rat.userurl</param-name>
		<param-value>http://ratmine.mcw.edu</param-value>
	</context-param>
	
	<context-param>
		<param-name>intermine.mouse.appname</param-name>
		<param-value>mousemine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.mouse.title</param-name>
		<param-value>MouseMine</param-value>
	</context-param>
	<context-param>
		<param-name>intermine.mouse.userurl</param-name>
		<param-value>http://www.mousemine.org</param-value>
	</context-param>	
		
	
  <!-- Default page to serve -->
  <welcome-file-list>
    <welcome-file>toxygates.html</welcome-file>
  </welcome-file-list>
  
  <!-- Cache header editing filter, to ensure the application 
  refreshes properly after updates. Must be in the tomcat classpath for the filter to work
  The source code can be found in src/tomcat/NocacheFilter.
  -->
  <filter>
    <filter-name>gwtCacheControlFilter</filter-name>
    <filter-class>t.tomcat.NocacheFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>gwtCacheControlFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <session-config>
  	<!--  24h session timeout (minutes) -->
  	<session-timeout>1440</session-timeout>
  </session-config>

<!-- The closing </web-app> will be filled in by scripts like 
  new_instance.public.sh. 
  If you will not be using that script, please uncomment the line below to close this file.
-->

<!-- </web-app> -->

