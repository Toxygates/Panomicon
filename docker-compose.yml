version: '3'

services:
  db:
    image: postgres:12.13
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - panomicon_net
    restart: unless-stopped
    volumes:
      - fusionauth_db_data:/var/lib/postgresql/data
      - ./docker/fusionauth/sql:/docker-entrypoint-initdb.d

  fusionauth:
    image: fusionauth/fusionauth-app:1.42.0
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://db:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: http://fusionauth:9011
    networks:
      - panomicon_net
    restart: unless-stopped
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config

  fuseki:
    container_name: "jena-fuseki"
    build:
      context: ./docker/fuseki
      dockerfile: Dockerfile
    networks:
      - panomicon_net
    restart: unless-stopped
    environment:
      JVM_ARGS: ${FUSEKI_JVM_ARGS}
    ports:
      - 3030:3030
    volumes:
      - ${FUSEKI_DATA_DIR}:/fuseki

networks:
  panomicon_net:
    driver: bridge

volumes:
  fusionauth_db_data:
  fusionauth_config:
