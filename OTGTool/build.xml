<project name="OTGTool" default="compile" basedir="."
  xmlns:ivy="antlib:org.apache.ivy.ant">

  <!-- mostly from: http://www.scala-lang.org/node/98 -->

  <property name="sources.dir" value="src" />
  <property name="lib.dir" value="lib" />
  <property name="scala-source.dir" value="main/scala" />
  <property name="java-source.dir" value="main/java" />
  <property name="scala-test.dir" value="test/scala" />
  <property name="build.dir" value="classes" />
  <property name="testbuild.dir" value="test-classes" />

  <!-- set scala.home -->
  <property environment="env" />
  <property name="scala.home" value="${env.SCALA_HOME}" />

  <!-- needed for tests -->
  <property name="kyotocabinet_lib.dir" value="${env.KC_LIB_DIR}" />

  <target name="init">
    <property name="scala-library.jar" 
      value="${scala.home}/lib/scala-library.jar" />
    <property name="scala-compiler.jar" 
      value="${scala.home}/lib/scala-compiler.jar" /> 
    <property name="scala.reflect" 
      value="${scala.home}/lib/scala-reflect.jar"/>
    <path id="build.classpath">
      <pathelement location="${scala-library.jar}" />
      <pathelement location="${build.dir}" />
      <fileset dir="mlib">
        <include name="**/*.jar" />
      </fileset>
    </path>
    <taskdef resource="scala/tools/ant/antlib.xml">
      <classpath>
        <pathelement location="${scala-compiler.jar}" />
        <pathelement location="${scala-library.jar}" />
        <pathelement location="${scala.reflect}"/>
      </classpath>
    </taskdef>
  </target>

  <!-- Not currently used -->
  <target name="resolve">
    <ivy:settings />
    <!--
    <ivy:configure file="ivysettings.xml" />
    -->
    <ivy:resolve file="ivy.xml" conf="compile" />
  </target>

  <path id="compile.classpath">
    <path refid="build.classpath" />
    <path refid="ivy.classpath" />
  </path>

  <target name="retrieve" depends="init">
    <ivy:cachepath pathid="ivy.classpath" />
    <!-- Needed for bundling/packaging of front-end. Deletes obsolete artifacts. -->
    <ivy:retrieve pattern="${lib.dir}/[type]/[artifact]-[revision].[ext]"
      sync="true" type="bundle,jar" />
  </target>

  <target name="compile" depends="retrieve">

    <mkdir dir="${build.dir}" />
    <scalac srcdir="${sources.dir}"
      destdir="${build.dir}"
      classpathref="compile.classpath"
      deprecation="on"
      optimise="on">
      <include name="${scala-source.dir}/**/*.scala" />
      <include name="${java-source.dir}/**/*.java" />
      <exclude name="${scala-test.dir}/**/*.scala" />
    </scalac>
    <javac srcdir="${sources.dir}"
      destdir="${build.dir}"
      classpathref="compile.classpath">
      <include name="${java-source.dir}/**/*.java" />
    </javac>

    <mkdir dir="${testbuild.dir}" />
    <scalac srcdir="${sources.dir}" destdir="${testbuild.dir}" classpathref="compile.classpath"
      deprecation="on">
      <include name="${scala-test.dir}/**/*.scala" />
    </scalac>
  </target>

  <target name="test" depends="compile">
    <taskdef name="scalatest" classname="org.scalatest.tools.ScalaTestAntTask">
      <classpath refid="compile.classpath" />
    </taskdef>
    <scalatest fork="true" parallel="true">
      <reporter type="stdout" config="FD"/>
      <reporter type="file" filename="tests.out"/>
      <runpath>
        <pathelement location="${testbuild.dir}" />
      </runpath>
      <jvmarg value="-Djava.library.path=${kyotocabinet_lib.dir}"/>
    </scalatest>
  </target>

  <target name="clean">
    <delete dir="${build.dir}" failonerror="false" />
    <delete dir="${testbuild.dir}" failonerror="false" />
  </target>


</project>

